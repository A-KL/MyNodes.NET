


<h2>Nodes Control</h2>

<div class="row" id="nodesContainer">
</div>

<div class="col-xs-6 col-sm-4 col-md-3" id="nodeTemplate" style="display: none;">
    <div class="panel panel-default">
        <div class="panel-heading" id="nodeTitle">
            Node title
        </div>
        <div class="panel-body">
            <span id="nodeBody">Node body</span>
            <br />
            <ul class="list-group" id="sensorsContainer"></ul>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs"></script>

    @Scripts.Render("~/bundles/moment")

    <script src="~/Scripts/mysensors.js" type="text/javascript" encoding="UTF-8"></script>

    <link href="~/Content/bootstrap-switch.css" rel="stylesheet">
    <script src="~/Scripts/bootstrap-switch.js"></script>

    <link href='@Url.Content("~/Content/themes/base/all.css")' rel="stylesheet" type="text/css" />
    <script src='@Url.Content("~/Scripts/jquery-ui-1.11.4.min.js")' type="text/javascript"></script>

    <script>
        var gatewayHub;

        $(function () {
            gatewayHub = $.connection.gatewayHub;

            gatewayHub.client.returnNodes = function (nodes) {
                $('#nodesContainer').html(null);

                for (var i = 0; i < nodes.length; i++) {
                    createOrUpdateNode(nodes[i]);
                }
            };

            gatewayHub.client.onNewNodeEvent = function (node) {
                createOrUpdateNode(node);
            };

            gatewayHub.client.onNodeUpdatedEvent = function (node) {
                createOrUpdateNode(node);
            };

            gatewayHub.client.onNodeLastSeenUpdatedEvent = function (node) {
                updateLastSeen(node);
            };

            gatewayHub.client.onNodeBatteryUpdatedEvent = function (node) {
                updateBattery(node);
            };

            gatewayHub.client.onSensorUpdatedEvent = function (sensor) {
                createOrUpdateSensor(sensor);
            };

            gatewayHub.client.onNewSensorEvent = function (sensor) {
                createOrUpdateSensor(sensor);
            };

            gatewayHub.client.onClearNodesList = function (sensor) {
                $('#nodesContainer').html(null);
            };

            $.connection.hub.start().done(function () {
                $.get('@Url.Action("GetNodes", "Gateway")');

            });

        });

        function createOrUpdateNode(node) {
            var id = node.nodeId;

            if ($('#nodePanel' + id).length == 0) {
                //create new
                $('#nodeTemplate')
                    .clone()
                    .attr("id", "nodePanel" + id)
                    .css('display', 'block')
                    .appendTo('#nodesContainer');

                $('#nodePanel' + id)
                    .find('#nodeTitle')
                    .attr("id", "nodeTitle" + id)
                    .html("Node " + id);

                $('#nodePanel' + id)
                    .find('#nodeBody')
                    .attr("id", "nodeBody" + id);

                $('#nodePanel' + id)
                    .find('#sensorsContainer')
                    .attr("id", "sensorsContainer" + id);
            }

            //update body
            $('#nodeBody' + id)
                .html(null);

            if (node.name != null)
                $('#nodeBody' + id)
                    .append(node.name + "<br/>");

            if (node.batteryLevel != null)
                $('#nodeBody' + id)
                    .append("<div id='nodeBattery" + id + "'>"
                        + "Battery: " + node.batteryLevel
                        + "</div>");

            for (var i = 0; i < node.sensors.length; i++) {
                createOrUpdateSensor(node.sensors[i]);
            }
        }


        function updateLastSeen(node) {

        }

        function updateBattery(node) {
            var id = node.nodeId;
            $('#nodeBattery' + id)
                .html("Battery: " + node.batteryLevel);
        }


        function createOrUpdateSensor(sensor) {
            var id = sensor.ownerNodeId + "-" + sensor.sensorId;

            if ($('#sensorPanel' + id).length == 0) {
                //create new
                $('#sensorsContainer' + sensor.ownerNodeId)
                    .append("<li class='list-group-item' id='sensorPanel" + id + "'>"
                        + "</li>");

                $('#sensorPanel' + id)
                    .append("<div id='sensorTitle" + id + "'></div>");
            }

            //update body

            var sensorType = Object.keys(mySensors.sensorTypeSimple)[sensor.sensorType];
            if (sensorType == null) sensorType = "Unknown";

            if (sensor.description != null)
                $('#sensorTitle' + id)
                    .html(sensor.description);
            else
                $('#sensorTitle' + id)
                    .html(sensorType);

            for (var i = 0; i < sensor.sensorData.length; i++) {
                createOrUpdateSensorData(sensor, sensor.sensorData[i]);
            }
        }

        var slidersArray = new Array();
        setInterval(sendSliders, 10);

        function createOrUpdateSensorData(sensor, data) {
            var sensorId = sensor.ownerNodeId + "-" + sensor.sensorId;
            var id = sensor.ownerNodeId + "-" + sensor.sensorId + "-" + data.dataType;

            if ($('#dataPanel' + id).length == 0) {
                //create new
                $('#sensorPanel' + sensorId)
                    .append('<div class="pull-right pull-up" id="dataPanel' + id + '">' + '</div>');

                if (sensor.sensorData.length > 1)
                    $('#sensorPanel' + sensorId)
                        .append('<br/><br/>');
            }

            //update body

            //ON-OFF BUTTON
            if (data.dataType == mySensors.sensorDataType.V_TRIPPED
                || data.dataType == mySensors.sensorDataType.V_STATUS) {
                if ($("[name='toggle-" + id + "']").length == 0) {
                    //create new
                    $('#dataPanel' + id)
                        .html("<input type='checkbox' name='toggle-" + id + "' data-label-width='0' data-size='small'>");

                    $("[name='toggle-" + id + "']").bootstrapSwitch('state', data.state == "1");

                    $("[name='toggle-" + id + "']").on('switchChange.bootstrapSwitch', function (event, state) {
                        var toggle = this.name.split("-");
                        var val = state == true ? 1 : 0;
                        sendSensor(toggle[1], toggle[2], toggle[3], val);
                    });
                } else {
                    //update
                    $("[name='toggle-" + id + "']").bootstrapSwitch('state', data.state == "1");
                }
            }
                //0-100% SLIDER
            else if (data.dataType == mySensors.sensorDataType.V_PERCENTAGE
                || data.dataType == mySensors.sensorDataType.V_LIGHT_LEVEL) {
                if ($("[name='slider-" + id + "']").length == 0) {
                    //create new
                    console.log("create");
                    $('#dataPanel' + id)
                        .html("<div id='slider' name='slider-" + id + "'></div>");

                    $("[name='slider-" + id + "']").slider({value: data.state});

                    $('#dataPanel' + id).removeClass("pull-right");

                    slidersArray.push({
                        sliderId: id,
                        nodeId: sensor.ownerNodeId,
                        sensorId: sensor.sensorId,
                        dataType: data.dataType,
                        lastVal: data.state
                    });
                } else {
                    //update
                    //console.log("update");
                    $("[name='slider-" + id + "']").slider("value", data.state);
                    updateSliderInArray(id, data.state);
                    
                }
            }
                //RGB SLIDERS
            else if (data.dataType == mySensors.sensorDataType.V_RGB) {


                /*
                $('#dataPanel' + id)
                    .html("<div id='slider' name='slider-" + id + "-r'></div>");
                $('#dataPanel' + id)
                    .html("<div id='slider' name='slider-" + id + "-g'></div>");
                $('#dataPanel' + id)
                    .html("<div id='slider' name='slider-" + id + "-b'></div>");

                $("[name='slider-" + id + "-r'] ~ *").slider({
                    range: "min",
                    max: 255,
                    value: 127,
                    //value: data.state,
                    slide: function (event, ui) {
                        var red = $("[name='slider-" + id + "-r']").slider("value"),
                          green = $("[name='slider-" + id + "-g']").slider("value"),
                          blue = $("[name='slider-" + id + "-b']").slider("value"),
                          hex = hexFromRGB(red, green, blue);
                        $("#swatch").css("background-color", "#" + hex);
                    }
                });
                //  $("[name='slider-" + id + "']").slider("value", data.state);

                $('#dataPanel' + id).removeClass("pull-right");*/
            }
                //Simple text
            else {
                $('#dataPanel' + id)
                    .html(data.state);
            }
        }

        function sendSensor(nodeId, sensorId, dataType, val) {
            var message = "" +
                nodeId + ";"
                + sensorId + ";"
                + mySensors.messageType.C_SET + ";"
                + "0" + ";"
                + dataType + ";"
                + val;

            console.log(message);


            gatewayHub.server.sendMessage(message);
        }

        function sendSliders() {
            for (var i = 0; i < slidersArray.length; i++) {
                var id = slidersArray[i].sliderId;
                var currentVal = $("[name='slider-" + id + "']").slider("value");
            
                if (currentVal != slidersArray[i].lastVal) {

                    slidersArray[i].lastVal = currentVal;
                    sendSensor(slidersArray[i].nodeId,
                        slidersArray[i].sensorId,
                        slidersArray[i].dataType,
                        slidersArray[i].lastVal);
                }
            }
        }

        function updateSliderInArray(sliderId, lastVal) {
            for (var i = 0; i < slidersArray.length; i++) {
                if (slidersArray[i].sliderId == sliderId)
                    slidersArray[i].lastVal = lastVal;
            }
        }
    </script>
}

