


<h2>Nodes Control</h2>

<div class="row" id="nodesContainer">
</div>

<div class="col-xs-6 col-sm-4 col-md-3" id="nodeTemplate" style="display: none;">
    <div class="panel panel-default">
        <div class="panel-heading" id="nodeTitle">
            Node title
        </div>
        <div class="panel-body">
            <span id="nodeBody">Node body</span>
            <br />
            <ul class="list-group" id="sensorsContainer"></ul>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs"></script>

    @Scripts.Render("~/bundles/moment")

    <script src="~/Scripts/mysensors.js" type="text/javascript" encoding="UTF-8"></script>

    <link href="~/Content/bootstrap-switch.css" rel="stylesheet">

    <script src="~/Scripts/bootstrap-switch.js"></script>

    <script>
        $(function () {
            var gatewayHub = $.connection.gatewayHub;

            gatewayHub.client.returnNodes = function (nodes) {
                $('#nodesContainer').html(null);

                for (var i = 0; i < nodes.length; i++) {
                    createOrUpdateNode(nodes[i]);
                }
            };

            gatewayHub.client.onNewNodeEvent = function (node) {
                createOrUpdateNode(node);
            };

            gatewayHub.client.onNodeUpdatedEvent = function (node) {
                createOrUpdateNode(node);
            };

            gatewayHub.client.onNodeLastSeenUpdatedEvent = function (node) {
                updateLastSeen(node);
            };

            gatewayHub.client.onNodeBatteryUpdatedEvent = function (node) {
                updateBattery(node);
            };

            gatewayHub.client.onSensorUpdatedEvent = function (sensor) {
                createOrUpdateSensor(sensor);
            };

            gatewayHub.client.onNewSensorEvent = function (sensor) {
                createOrUpdateSensor(sensor);
            };

            gatewayHub.client.onClearNodesList = function (sensor) {
                $('#nodesContainer').html(null);
            };

            $.connection.hub.start().done(function () {
                $.get('@Url.Action("GetNodes", "Gateway")');

            });

        });

        function createOrUpdateNode(node) {
            var id = node.nodeId;

            if ($('#nodePanel' + id).length == 0) {
                //create new
                $('#nodeTemplate')
                    .clone()
                    .attr("id", "nodePanel" + id)
                    .css('display', 'block')
                    .appendTo('#nodesContainer');

                $('#nodePanel' + id)
                    .find('#nodeTitle')
                    .attr("id", "nodeTitle" + id)
                    .html("Node " + id);

                $('#nodePanel' + id)
                    .find('#nodeBody')
                    .attr("id", "nodeBody" + id);

                $('#nodePanel' + id)
                    .find('#sensorsContainer')
                    .attr("id", "sensorsContainer" + id);
            }

            //update body
            $('#nodeBody' + id)
                .html(null);

            if (node.name != null)
                $('#nodeBody' + id)
                    .append(node.name + "<br/>");

            if (node.batteryLevel != null)
                $('#nodeBody' + id)
                    .append("<div id='nodeBattery" + id + "'>"
                        + "Battery: " + node.batteryLevel
                        + "</div>");

            for (var i = 0; i < node.sensors.length; i++) {
                createOrUpdateSensor(node.sensors[i]);
            }
        }


        function updateLastSeen(node) {

        }

        function updateBattery(node) {
            var id = node.nodeId;
            $('#nodeBattery' + id)
                .html("Battery: " + node.batteryLevel);
        }


        function createOrUpdateSensor(sensor) {
            var id = sensor.ownerNodeId + "-" + sensor.sensorId;

            if ($('#sensorPanel' + id).length == 0) {
                //create new
                $('#sensorsContainer' + sensor.ownerNodeId)
                    .append("<li class='list-group-item' id='sensorPanel" + id + "'>"
                        + "</li>");
            }

            //update body
            $('#sensorPanel' + id)
                .html(null);

            var sensorType = Object.keys(mySensors.sensorTypeSimple)[sensor.sensorType];
            if (sensorType == null) sensorType = "Unknown";


            if (sensor.description != null)
                $('#sensorPanel' + id)
                    .append(sensor.description);
            else
                $('#sensorPanel' + id)
                    .append(sensorType);

            for (var i = 0; i < sensor.sensorData.length; i++) {
                createOrUpdateSensorData(sensor, sensor.sensorData[i]);
            }
        }


        function createOrUpdateSensorData(sensor, data) {
            var sensorId = sensor.ownerNodeId + "-" + sensor.sensorId;
            var id = sensor.ownerNodeId + "-" + sensor.sensorId + "-" + data.dataType;

            if ($('#dataPanel' + id).length == 0) {
                //create new
                $('#sensorPanel' + sensorId)
                    .append('<div class="pull-right" id="dataPanel' + id + '">' + '</div>');

                if (sensor.sensorData.length>1)
                    $('#sensorPanel' + sensorId)
                    .append('<br/><br/>');
            }

            //update body

            //ON-OFF BUTTON
            if (data.dataType == mySensors.sensorDataType.V_TRIPPED
                || data.dataType == mySensors.sensorDataType.V_STATUS) {
                $('#dataPanel' + id)
                    .html('<input type="checkbox" name="my-checkbox' + id + '" data-label-width="0" data-size="small" >');

                $("[name='my-checkbox" + id + "']").bootstrapSwitch('state', data.state == "1");
            }

                //Simple text
            else {
                $('#dataPanel' + id)
                    .html(data.state);
            }
        }



    </script>
}

