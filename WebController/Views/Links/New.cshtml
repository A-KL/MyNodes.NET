@using MyNetSensors.Gateway
@model MyNetSensors.NodesLinks.SensorLink


@{
    ViewBag.Title = "New Link";
}

<h2>New Link</h2>
<h4>@ViewBag.description</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.toNodeId)
    @Html.HiddenFor(model => model.toSensorId)


    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-sm-2">From</label>
            <div class="col-sm-10">
                <select class="selectpicker" name="from">
                    @foreach (Node node in ViewBag.nodes)
                    {
                        <optgroup label="@node.GetSimpleName2()">
                            @foreach (Sensor sensor in node.sensors)
                            {
                                List<SensorData> datas = sensor.GetAllData();
                                foreach (SensorData data in datas)
                                {
                                    if (node.nodeId!= Model.toNodeId|| sensor.sensorId!= Model.toSensorId)
                                    {
                                        <option value="@node.nodeId-@sensor.sensorId-@((int) data.dataType)">@sensor.GetSimpleName2() [@data.dataType]</option>
                                    }
                                }
                            }
                        </optgroup>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">To</label>
            <div class="col-sm-10">
                <select class="selectpicker" name="to">
                    @foreach (SensorData data in ViewBag.sensorDatas)
                    {
                        <option value="@Model.toNodeId-@Model.toSensorId-@((int)data.dataType)">[@data.dataType]</option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="btn-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Cancel", "List", new { id1 = Model.toNodeId, id2 = Model.toSensorId }, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to links list", "List", new { id1 = Model.toNodeId, id2 = Model.toSensorId })

</div>

<div id="target">
    Click here
</div>

@section styles
{
    @Styles.Render("~/Content/select")


}

@section scripts
{
    @Scripts.Render("~/bundles/select")

    <script>

        $('.selectpicker').selectpicker();
        $("#target").click(function () {
            alert($('from').find(":selected").attr("value"));
            alert($('to').find(":selected").attr("value"));
        });
        
    </script>
}